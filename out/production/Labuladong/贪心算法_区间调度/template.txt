labuladong: https://labuladong.gitee.io/algo/3/29/99/

正确的思路其实很简单，可以分为以下三步：

1、从区间集合 intvs 中选择一个区间 x，这个 x 是在当前所有区间中结束最早的（end 最小）。

2、把所有与 x 区间相交的区间从区间集合 intvs 中删除。

3、重复步骤 1 和 2，直到 intvs 为空为止。之前选出的那些 x 就是最大不相交子集。

把这个思路实现成算法的话，可以按每个区间的 end 数值升序排序。

看下代码：

public int intervalSchedule(int[] intvs){
    if (intvs.length == 0){
        return 0;
    }

    // 按end 升序排序
    Arrays.sort(intvs, new Comparator<int[]>(){
        public int compare(int[] a, int[] b){
            return a[1] - b[1];
        }
    });

    // 至少第一个区间是不相交的
    int count = 1;
    // 排序后，第一个区间就是x
    int x_end = intvs[0][1];
    for (int[] intv: intvs){
        int start = intv[0];
        if (start >= e_end){
            // 找到下一个最近的不相交区间了
            count++;
            x_end = intv[1];
        }
    }
    return count;
}